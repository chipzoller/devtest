name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true  # Fetch Hugo themes
        fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
    # Ensure the site succeeds Hugo builds.
    - name: Build site with Hugo
      uses: lowply/build-hugo@v0.69.0
    - name: List files in "public"
      run: |
        ls -lah public/
    # - name: Commit files
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git commit -m "Publish neonmirrors to site" -a
    # - name: Push to site
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: site
  publish:
    runs-on: ubuntu-18.04
    needs: build
    steps:
    - name: checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Test s5cmd
      env:
        AWS-DEFAULT-REGION: "us-east-2"
      run: |
        curl -sLO https://github.com/peak/s5cmd/releases/download/v1.0.0/s5cmd_1.0.0_Linux-64bit.tar.gz
        tar xzvf s5cmd_1.0.0_Linux-64bit.tar.gz
        chmod +x s5cmd
        sudo mv s5cmd /usr/local/bin/
        env AWS_DEFAULT_REGION=${AWS-DEFAULT-REGION} env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} s5cmd ls
    # - name: publish to S3 bucket
    #   run: aws s3 ls
  invalidate:
    runs-on: ubuntu-18.04
    needs:
      - build
      - publish
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Invalidate cache on CloudFront for root
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRO_ID }} --paths "/*"